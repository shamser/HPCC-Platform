{{- define "hpcc.dfuServerConfigMap" -}}
apiVersion: v1
metadata:
  name: {{ .me.name }}-configmap
data:
  {{ .me.name }}.yaml: |
    version: 1.0
    dfuserver:
{{ toYaml (omit .me "logging") | indent 6 }}
{{- include "hpcc.generateLoggingConfig" . | indent 6 }}
    global:
{{ include "hpcc.generateGlobalConfigMap" .root | indent 6 }}
{{- if not .useChildProcesses }}
  ftslave-jobspec.yaml: |
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: ftslave-%jobname
      labels:
        name: ftslave-%jobname
        app: ftslave
    spec:
      ttlSecondsAfterFinished: 100
      template:
        metadata:
          labels:
            accessDali: "yes"
            accessEsp: "yes"
            app: ftslave
        spec:
          serviceAccountName: "hpcc-default"
          initContainers: 
            {{- include "hpcc.checkDataMount" . | indent 10 }}
          containers:
          - name: ftslave-%jobname
{{- include "hpcc.addSecurityContext" . | indent 12 }}
{{ include "hpcc.addImageAttrs" . | indent 12 }}
{{- include "hpcc.addResources" (dict "me" .ftslaveResources) | indent 12 }}
            workingDir: /var/lib/HPCCSystems
            command: [ ftslave ] 
            args: [
                        {{ include "hpcc.configArg" .me }},
                        {{ include "hpcc.daliArg" .root }},
                        {{ printf "--manager=%s" .me.name | quote }},
                        "--replyTag=%replyTag",
                        "--kind=%kind",
                        {{ printf "--port=%d"  .ftslavePort |quote }},
                        %args
                     ]
            volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" .me | indent 12 }}
{{ include "hpcc.addDataVolumeMount" . | indent 12 }}
          volumes:
{{ include "hpcc.addConfigMapVolume" .me | indent 10 }}
{{ include "hpcc.addDataVolume" . | indent 10 }}
          restartPolicy: Never
      backoffLimit: 0
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: ftslave-%jobname
    spec:
      selector:
        name: ftslave-%jobname
      ports:
      - port: {{ .ftslavePort }}
        protocol: TCP
      type: ClusterIP
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: ftslave-%jobname
    spec:
      podSelector:
        matchLabels:
          app: ftslave
          job: ftslave-%jobname
      ingress:
      - from:
        - podSelector:
            matchLabels:
              app: ftslave
              job: ftslave-%jobname
      egress:
      - to:
        - podSelector:
            matchLabels:
              app: ftslave
              job: ftslave-%jobname

{{- end }}
{{- end -}}

{{ range $.Values.dfuserver -}}
{{- if not .disabled -}}
{{- $categories := list "system" "storage" -}}
{{- $dfuServerPort := 7070 }}
{{- $ftslavePort := 6407 }}
{{- $commonCtx := dict "root" $ "me" . "categories" $categories "ftslavePort" $ftslavePort }}
{{- $configSHA := include "hpcc.dfuServerConfigMap" $commonCtx | sha256sum }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      run: {{ .name | quote }}
  template:
    metadata:
      labels:
        run: {{ .name | quote }}
        accessDali: "yes"
        app: dfuserver
      annotations:
        checksum/config: {{ $configSHA }}
    spec:
      serviceAccountName: "hpcc-default"
      initContainers:
        {{- include "hpcc.checkDataMount" $commonCtx | indent 6 }}
      containers:
      - name: {{ .name | quote }}
        workingDir: /var/lib/HPCCSystems
        command: [ dfuserver ]
        args: [
                {{ include "hpcc.configArg" . }},
                {{ include "hpcc.daliArg" $ }}
          ]
{{ include "hpcc.addSentinelProbes" . | indent 8 }}
{{- include "hpcc.addSecurityContext" $commonCtx | indent 8 }}
{{- include "hpcc.addResources" (dict "me" .resources) | indent 8 }}
{{ include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        volumeMounts:
{{ include "hpcc.addDataVolumeMount" $commonCtx | indent 8}}
{{ include "hpcc.addConfigMapVolumeMount" . | indent 8 }}
      volumes:
{{ include "hpcc.addConfigMapVolume" . | indent 6 }}
{{ include "hpcc.addDataVolume" $commonCtx | indent 6}}
---
kind: ConfigMap
{{ include "hpcc.dfuServerConfigMap" $commonCtx }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .name | quote }}
spec:
  ports:
  - port: {{ $dfuServerPort }}
    protocol: TCP
    targetPort: {{ $dfuServerPort }}
  selector:
    run: {{ .name | quote }}
  type: ClusterIP
{{- end }}
{{- end }}
